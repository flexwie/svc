name: Build go docker images

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        svc: [ "api-gateway", "auth-svc", "meal-svc" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: magnetikonline/action-golang-cache@v4
        with:
          go-version: "^1.19"
          cache-key-suffix: ${{matrix.svc}}
      - name: Install protoc
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: protobuf-compiler
          version: latest
      - name: Install go proto plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
          export PATH="$PATH:$(go env GOPATH)/bin"
      - name: Create proto files
        run: cd common && make proto && cd ..
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/flexwie/svc/${{matrix.svc}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: SVC=${{ matrix.svc }}
          file: ./go.Dockerfile
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
